<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:AutoUi"
                    >

    <Thickness x:Key="DefaultSpacing">10</Thickness>
    <Thickness x:Key="DefaultBorderThickness">2</Thickness>
    
    <LinearGradientBrush x:Key="WindowBackgroundGradient" StartPoint="0,0" EndPoint="0.1,1">
        <GradientStop Offset="1" Color="White" />
        <GradientStop Offset="0.23" Color="White" />
        <GradientStop Offset="0" Color="{StaticResource GradientColor}" />
    </LinearGradientBrush>

    <Style x:Key="GenericWindowStyle" TargetType="Window">
        <Setter Property="Background" Value="{StaticResource WindowBackgroundGradient}" />
        <Setter Property="FontSize" Value="12" />
    </Style>


    <Style x:Key="TitleContainerStyle">
        <Setter Property="FrameworkElement.Height" Value="64" />
    </Style>

    <Style x:Key="TitleStyle" TargetType="Label">
        <Setter Property="FontSize" Value="24" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="{StaticResource DefaultSpacing}" />
    </Style>

    <Style x:Key="FooterContainerStyle">
        <Setter Property="Panel.Background" Value="#F0F0F0" />
        <Setter Property="Panel.Height" Value="48" />
    </Style>

    <Style x:Key="ButtonBaseStyle" TargetType="Button">
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="Margin" Value="{StaticResource DefaultSpacing}" />
        <Setter Property="Padding" Value="8 4" />
        <Setter Property="Background" Value="{StaticResource PrimaryInverseColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryColorBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <!-- 
                        wir legen fest:
                        - ein Button wird mit einem Border dargestellt (wobei wir 
                          die Breite des Rahmens auf die Breite und die
                          Rahmenfarbe auf die Rahmenfarbe des Buttons, den
                          wir hier stylen, setzen)
                        - den inneren Abstand zum Border (= Padding) simulieren wir,    
                          indem wir dem Content Presenter, der den Inhalt unseres
                          Buttons darstellt, einen Margin in derselben Grösse wie
                          das beim Button definierte Padding zuweisen
                        - die TemplateBinding-Ausdrücke bauen wir ein, damit unser
                          Button flexibel und die jeweiligen Darstellungsproperties
                          per inline styling überschreibbar bleiben
                    -->
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Background="{TemplateBinding Background}" >
                            <ContentPresenter Content="{TemplateBinding Content}" 
                                              Margin="{TemplateBinding Padding}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.8" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="MinWidth" Value="0" /> 
    </Style>

    <Style x:Key="PrimaryButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="{StaticResource PrimaryColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryInverseColorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryInverseColorBrush}" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style x:Key="SecondaryButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="BorderBrush" Value="{StaticResource SecondaryColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource SecondaryColorBrush}" />
    </Style>

    <Style TargetType="Label">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="{StaticResource DefaultSpacing}" />
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="8 4" />
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="8 4" />
    </Style>

</ResourceDictionary>